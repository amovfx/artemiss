version: '3'
services:
    flask-server:
        container_name: flask_app
        build:
          context: ./flask/
          dockerfile: Dockerfile
        command: ["gunicorn", "--bind", "0.0.0.0:5000", "wsgi:app"]
        restart: unless-stopped
        environment:
            MONGO_DATABASE: user_db
            MONGO_USERNAME: flask_user
            MONGO_PASSWORD: flask_user_password
            MONGO_HOST: mongo_user_db
        ports:
            - "5000"
        volumes:
            - flask_app_data:/webapp
        depends_on:
            - redis
            - mongo_user_db
        links:
            - mongo_user_db
        networks:
            - backend
            - frontend

#DATABASE
    redis:
        container_name: redis_db
        image: redis
        networks:
            - backend

#figure out docker secrets
    mongo_user_db:
        container_name: mongo_user_db
        image: mongo:latest
        command: mongod --auth
        environment:
            - MONGO_INITDB_DATABASE=user_db
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=pass
            - MONGODB_DATA_DIR=/data/db
            - MONGODB_LOG_DIR=/dev/null

        volumes:
            - mongodbdata:/data/db
        networks:
            - backend



    nginx:
        container_name: nginx_server
        image: nginx:latest
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        restart: always
        depends_on:
            - flask-server
            - redis
            - mongo_user_db
        ports:
            - 80:80
        networks:
            - frontend
#
#        build:
#            context: ./nginx/
#            dockerfile: Dockerfile
#        restart: always
#        ports:
#            - 1337:80
#        depends_on:
#            - flask-server
#        links:
#            - flask-server


networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

#Make volumes persistent
volumes:
    mongodbdata:
        driver: local
    flask_app_data:
        driver: local
    nginxdata:
        driver: local
